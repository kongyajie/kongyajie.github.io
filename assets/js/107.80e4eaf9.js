(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{397:function(v,_,l){"use strict";l.r(_);var i=l(10),t=Object(i.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"javascript-webapi"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#javascript-webapi"}},[v._v("#")]),v._v(" JavaScript-webapi")]),v._v(" "),_("h3",{attrs:{id:"考点总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#考点总结"}},[v._v("#")]),v._v(" 考点总结")]),v._v(" "),_("ul",[_("li",[v._v("eventloop")]),v._v(" "),_("li",[v._v("DOM事件和event loop")]),v._v(" "),_("li",[v._v("Promise进阶")]),v._v(" "),_("li",[v._v("async/await")])]),v._v(" "),_("h3",{attrs:{id:"dom"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[v._v("#")]),v._v(" DOM")]),v._v(" "),_("ul",[_("li",[v._v("DOM 本质：HTML解析出的一棵树")]),v._v(" "),_("li",[v._v("DOM 节点操作\n"),_("ul",[_("li",[v._v("获取DOM节点")]),v._v(" "),_("li",[v._v("property和attribute\n"),_("ul",[_("li",[v._v("property：修改JS对象属性，不会体现再HTML结构中")]),v._v(" "),_("li",[v._v("attribute：修改HTML属性，会改变HTML结构（标签结构）")]),v._v(" "),_("li",[v._v("两者都有可能引起DOM重新渲染")]),v._v(" "),_("li",[v._v("建议：尽量用 property 操作，因为property可能会在JS机制中，避免一些不必要的DOM渲染；但是attribute是修改HTML结构，一定会引起DOM结构的重新渲染，而DOM重新渲染是比较耗费性能的")])])])])]),v._v(" "),_("li",[v._v("DOM 结构操作\n"),_("ul",[_("li",[v._v("新增/插入节点\n"),_("ul",[_("li",[v._v("appendChild")])])]),v._v(" "),_("li",[v._v("获取子元素列表，获取父元素\n"),_("ul",[_("li",[v._v("childNodes")]),v._v(" "),_("li",[v._v("parentNode")]),v._v(" "),_("li",[v._v("nodeName")]),v._v(" "),_("li",[v._v("nodeType")])])]),v._v(" "),_("li",[v._v("删除子元素\n"),_("ul",[_("li",[v._v("removeChild")])])])])]),v._v(" "),_("li",[v._v("DOM操作性能优化\n"),_("ul",[_("li",[v._v("DOM查询做缓存")]),v._v(" "),_("li",[v._v("将频繁操作改为一次性操作 document.createDocumentFragment()")])])]),v._v(" "),_("li",[v._v("HTML 页面的生命周期包含三个重要事件\n"),_("ul",[_("li",[_("strong",[v._v("DOMContentLoaded")]),v._v(" —— 浏览器已完全加载 HTML，并构建了 DOM 树，但像 "),_("code",[v._v("<img>")]),v._v(" 和样式表之类的外部资源可能尚未加载完成。")]),v._v(" "),_("li",[_("strong",[v._v("load")]),v._v(" —— 浏览器不仅加载完成了 HTML，还加载完成了所有外部资源：图片，样式等。")]),v._v(" "),_("li",[_("strong",[v._v("beforeunload")]),v._v("/"),_("strong",[v._v("unload")]),v._v(" —— 当用户正在离开页面时。")])])])]),v._v(" "),_("h3",{attrs:{id:"bom-browser-object-model"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#bom-browser-object-model"}},[v._v("#")]),v._v(" BOM（Browser Object Model）")]),v._v(" "),_("ul",[_("li",[v._v("navigator\n"),_("ul",[_("li",[v._v("userAgent")])])]),v._v(" "),_("li",[v._v("screen\n"),_("ul",[_("li",[v._v("width")]),v._v(" "),_("li",[v._v("height")])])]),v._v(" "),_("li",[v._v("location\n"),_("ul",[_("li",[v._v("href")]),v._v(" "),_("li",[v._v("protocol")]),v._v(" "),_("li",[v._v("hostname")]),v._v(" "),_("li",[v._v("pathname")]),v._v(" "),_("li",[v._v("search")]),v._v(" "),_("li",[v._v("hash")])])]),v._v(" "),_("li",[v._v("history\n"),_("ul",[_("li",[v._v("back()")]),v._v(" "),_("li",[v._v("forward()")])])])]),v._v(" "),_("h3",{attrs:{id:"事件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[v._v("#")]),v._v(" 事件")]),v._v(" "),_("ul",[_("li",[v._v("面试题\n"),_("ul",[_("li",[v._v("写一个通用的事件绑定函数")]),v._v(" "),_("li",[v._v("描述事件冒泡的流程\n"),_("ul",[_("li",[v._v("基于DOM树形结构")]),v._v(" "),_("li",[v._v("事件会顺着触发元素向上冒泡")]),v._v(" "),_("li",[v._v("应用场景：代理")])])]),v._v(" "),_("li",[v._v("无限下拉的图片列表，如何监听每个图片的点击\n"),_("ul",[_("li",[v._v("事件代理")]),v._v(" "),_("li",[v._v("用 e.target 获取触发元素")]),v._v(" "),_("li",[v._v("用 matches 来判断是否是触发元素")])])])])]),v._v(" "),_("li",[v._v("知识点\n"),_("ul",[_("li",[v._v("事件绑定")]),v._v(" "),_("li",[v._v("事件冒泡")]),v._v(" "),_("li",[v._v("事件代理\n"),_("ul",[_("li",[v._v("代码简洁")]),v._v(" "),_("li",[v._v("减少浏览器内存占用")]),v._v(" "),_("li",[v._v("但是，不要滥用")])])])])])])])}),[],!1,null,null,null);_.default=t.exports}}]);