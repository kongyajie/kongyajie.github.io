(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{369:function(v,_,t){"use strict";t.r(_);var i=t(10),l=Object(i.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"浏览器工作原理系列之4-如何进行性能优化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器工作原理系列之4-如何进行性能优化"}},[v._v("#")]),v._v(" 浏览器工作原理系列之4-如何进行性能优化？")]),v._v(" "),_("h2",{attrs:{id:"前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),_("p",[v._v("本文分为一下几个部分：")]),v._v(" "),_("ul",[_("li",[v._v("性能优化概述")]),v._v(" "),_("li",[v._v("性能检测和性能指标")]),v._v(" "),_("li",[v._v("页面呈现过程")]),v._v(" "),_("li",[v._v("性能优化策略")])]),v._v(" "),_("h2",{attrs:{id:"一、性能优化概述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、性能优化概述"}},[v._v("#")]),v._v(" 一、性能优化概述")]),v._v(" "),_("p",[v._v("网站性能优化分为：")]),v._v(" "),_("ul",[_("li",[v._v("存储服务器性能优化")]),v._v(" "),_("li",[v._v("应用服务器性能优化")]),v._v(" "),_("li",[v._v("Web性能优化")])]),v._v(" "),_("p",[v._v("Web性能如何定义：")]),v._v(" "),_("ul",[_("li",[v._v("客观性能：从开发者视角出发，可度量的客观性能")]),v._v(" "),_("li",[v._v("主观性能：从用户视角触发，可感知的主观性能")])]),v._v(" "),_("p",[v._v("那么好的网站性能有什么好处呢？")]),v._v(" "),_("ul",[_("li",[v._v("用户体验")]),v._v(" "),_("li",[v._v("业务价值")])]),v._v(" "),_("p",[v._v("性能优化越来越受到重视：")]),v._v(" "),_("ul",[_("li",[v._v("蛮荒时代：自由摸索")]),v._v(" "),_("li",[v._v("社区时代：由部分厂商推出最佳实践，如2007年雅虎35条军规、2014年谷歌推出Web开发最佳实践手册、2017年谷歌推出PWA和Lighthouse检测工具")]),v._v(" "),_("li",[v._v("标准时代：1994年W3C成立，2010年W3C成立Web性能工作组")])]),v._v(" "),_("h2",{attrs:{id:"二、性能检测和性能指标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、性能检测和性能指标"}},[v._v("#")]),v._v(" 二、性能检测和性能指标")]),v._v(" "),_("h3",{attrs:{id:"性能检测"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#性能检测"}},[v._v("#")]),v._v(" 性能检测")]),v._v(" "),_("p",[_("strong",[v._v("API")])]),v._v(" "),_("blockquote",[_("p",[v._v("Performance标准：对性能进行度量。")])]),v._v(" "),_("ol",[_("li",[v._v("高精度时间")])]),v._v(" "),_("ul",[_("li",[v._v("now() 距离当前时间ms")]),v._v(" "),_("li",[v._v("timeOrigin 页面初始时间戳")]),v._v(" "),_("li",[v._v("toJSON()")])]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("性能时间线")])]),v._v(" "),_("ul",[_("li",[v._v("getEntries()")]),v._v(" "),_("li",[v._v("getEntriesByType()")]),v._v(" "),_("li",[v._v("getEntriesByName()")])]),v._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[_("p",[v._v("资源请求时序")])]),v._v(" "),_("li",[_("p",[v._v("导航过程相关")])])]),v._v(" "),_("ul",[_("li",[v._v("navigation对象")]),v._v(" "),_("li",[v._v("timing对象")])]),v._v(" "),_("ol",{attrs:{start:"5"}},[_("li",[v._v("绘制关键时间点")])]),v._v(" "),_("ul",[_("li",[v._v("First Paint(FP)")]),v._v(" "),_("li",[v._v("First Contentful Paint(FCP)")])]),v._v(" "),_("ol",{attrs:{start:"6"}},[_("li",[v._v("用户自定义时间节点")])]),v._v(" "),_("ul",[_("li",[v._v("mark()")]),v._v(" "),_("li",[v._v("clearMarks()")]),v._v(" "),_("li",[v._v("measure()")]),v._v(" "),_("li",[v._v("clearMeasures()")])]),v._v(" "),_("ol",{attrs:{start:"7"}},[_("li",[_("p",[v._v("获取服务端各节点性能")])]),v._v(" "),_("li",[_("p",[v._v("检测长任务")])])]),v._v(" "),_("p",[_("strong",[v._v("工具")])]),v._v(" "),_("ul",[_("li",[v._v("鲁班尺：UC鲁班尺是基于Lighthouse来做的，它会分析页面在内核中真实渲染的情况， 并给出优化建议。")]),v._v(" "),_("li",[v._v("海鸥实验室：UC海鸥实验室是一个性能分析平台，它可以提供完善的首屏、内存、启动、帧率分析数据。")]),v._v(" "),_("li",[v._v("岳鹰全景监控平台：是阿里UC官方出品的先进移动应用线上监控平台")]),v._v(" "),_("li",[_("a",{attrs:{href:"https://cloud.tencent.com/document/product/1464",target:"_blank",rel:"noopener noreferrer"}},[v._v("腾讯云性能监控平台"),_("OutboundLink")],1),v._v("：（Real User Monitoring，RUM）一站式前端监控解决方案")]),v._v(" "),_("li",[_("strong",[v._v("Lighthouse")]),v._v("：检测页面性能瓶颈。")]),v._v(" "),_("li",[_("strong",[v._v("Timeline")]),v._v("：记录页面运行过程的具体细节，用于分析页面出现问题的具体位置。")]),v._v(" "),_("li",[_("strong",[v._v("Profile")]),v._v("：分析页面内存的使用情况和JS/CSS执行时间。一般可以用TImeline定位出大概位置，再用JavaScript CPU profiler详细分析每个JS函数的耗时。")]),v._v(" "),_("li",[_("strong",[v._v("Chrome Trace")]),v._v("：记录页面在浏览器内核执行的完整过程，粒度精细到每个函数方法，可以很准确的定位到具体问题。")])]),v._v(" "),_("h3",{attrs:{id:"性能指标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#性能指标"}},[v._v("#")]),v._v(" 性能指标")]),v._v(" "),_("blockquote",[_("p",[v._v("随着人们对性能优化的认识不断更新和变化，挑选了页面呈现过程中的许多时间节点，作为性能的参考指标。而你只需关注你看重的性能指标即可。")])]),v._v(" "),_("h4",{attrs:{id:"指标一览"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#指标一览"}},[v._v("#")]),v._v(" 指标一览")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("文档加载")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("TTFB")]),v._v("（Time To First Byte）：浏览器从请求页面开始到接收第一字节的时间，这个时间段内包括 DNS 查找、TCP 连接和 SSL 连接。")]),v._v(" "),_("li",[_("strong",[v._v("DCL")]),v._v("(DomContentLoaded)：当HTML 文档被完全加载和解析完成之后，DOMContentLoaded 事件被触发，而无需等待样式表、图像和子框架加载完成")]),v._v(" "),_("li",[_("strong",[v._v("Load")]),v._v("：页面所有资源都加载完毕后（比如图片，CSS），onLoad 事件才被触发。")])])]),v._v(" "),_("li",[_("p",[v._v("内容呈现")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("FP")]),v._v("(First Paint): 从开始加载到浏览器首次绘制像素到屏幕上的时间。这是开发人员关心页面加载的第一个关键时刻——当浏览器开始呈现页面时。")]),v._v(" "),_("li",[_("strong",[v._v("First Contentful Paint")]),v._v("(FCP)：浏览器首次绘制来自 DOM 的内容的时间，内容必须是文本、图片（包含背景图）、非白色的 canvas 或 SVG，也包括带有正在加载中的 Web 字体的文本。这是用户第一次开始看到页面内容，但仅仅有内容，并不意味着它是有用的内容（例如 Header、导航栏等），也不意味着有用户要消费的内容。另外，字体加载是影响 FCP 的一个重要因素，字体通常是需要一段时间才能加载的大文件，有些浏览器在加载字体之前会隐藏文本。为了确保在 webfont 加载期间文本保持可见，可以临时显示系统字体")]),v._v(" "),_("li",[_("strong",[v._v("First Meaningful Paint")]),v._v("(FMP)(不推荐)：页面的主要内容绘制到屏幕上的时间，这是一个更好的衡量用户感知加载体验的指标，但仍然不理想。主要内容的定义因页面而异，例如对于博客文章，它的主要内容是标题和摘要，对于搜索页面，它的主要内容是搜索结果，对于电商的页面，图片则是主要内容。所以采用 布局数量最大并且 Web 字体已加载 的时刻作为主要内容绘制的近似时间。")]),v._v(" "),_("li",[_("strong",[v._v("Largest Contentful Paint")]),v._v("(LCP):可视区域中最大的内容元素呈现到屏幕上的时间，用以估算页面的主要内容对用户可见时间。")]),v._v(" "),_("li",[_("strong",[v._v("Speed Index")]),v._v("(SI)：这是一个表示页面可视区域中内容的填充速度的指标，可以通过计算页面可见区域内容显示的平均时间来衡量。")]),v._v(" "),_("li",[_("strong",[v._v("First Screen Paint")]),v._v("(FSP)：页面从开始加载到首屏内容全部绘制完成的时间，用户可以看到首屏的全部内容。如果说 LCP 是用户看到有效内容的最近似的时间，那么在 FSP 这个时间点用户已经看到了可视区域内完整的内容，可以说是衡量用户视觉体验最合适的指标。")])])]),v._v(" "),_("li",[_("p",[v._v("交互响应")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("Time To Interactive")]),v._v("(TTI)：表示网页第一次完全达到可交互状态的时间点，浏览器已经可以持续性的响应用户的输入。完全达到可交互状态的时间点是在最后一个长任务（Long Task）完成的时间, 并且在随后的 5 秒内网络和主线程是空闲的。从定义上来看，中文名称叫可持续交互时间或可流畅交互时间更合适。长任务是需要 50 毫秒以上才能完成的任务")]),v._v(" "),_("li",[_("strong",[v._v("First CPU Idle")]),v._v("(FCI)（不推荐）：页面第一次可以响应用户输入的时间。FCI 和 TTI 都是页面可以响应用户输入的时间。FCI 发生在用户可以开始与页面交互时；TTI 发生在 用户完全能够（可持续） 与页面交互时。第一次可交互与可流畅交互的时间点如何确定可以在 Google 的 First Interactive and Consistently Interactive中查阅。")]),v._v(" "),_("li",[_("strong",[v._v("First Input Delay")]),v._v("(FID)：从用户第一次与页面交互（例如单击链接、点击按钮等）到浏览器实际能够响应该交互的时间。输入延迟是因为浏览器的主线程正忙于做其他事情，所以不能响应用户。发生这种情况的一个常见原因是浏览器正忙于解析和执行应用程序加载的大型 JavaScript 文件。第一次输入延迟通常发生在第一次内容绘制（FCP）和可持续交互时间（TTI）之间，因为页面已经呈现了一些内容，但还不能可靠地交互。")]),v._v(" "),_("li",[_("strong",[v._v("Frames Per Second")]),v._v("(FPS)：帧率是视频设备产生图像（或帧）的速率，用每秒可以重新绘制的帧数（Frames Per Second，FPS）表示。重新绘制可能需要重新计算样式、布局和绘制，如果每帧绘制到屏幕的时间在 16.7 ms 以上，每秒绘制的帧数就会小于 60 帧，人眼就能感受到页面出现卡顿，所以 FPS 是衡量应用流畅度的一个非常重要的指标，60fps 是页面流畅的目标，可以为每次绘制提供 16.7ms 的时间预算")])])])]),v._v(" "),_("h4",{attrs:{id:"用户体验核心指标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#用户体验核心指标"}},[v._v("#")]),v._v(" 用户体验核心指标")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("白屏时间")]),v._v("：页面开始有内容的时间，"),_("strong",[v._v("FP")]),v._v("或"),_("strong",[v._v("FCP")])]),v._v(" "),_("li",[_("strong",[v._v("首屏时间")]),v._v("：可视区域内容已完全呈现的时间，"),_("strong",[v._v("LCP")]),v._v("或"),_("strong",[v._v("FSP")])]),v._v(" "),_("li",[_("strong",[v._v("可交互时间")]),v._v("：用户第一次可以与页面交互的时间 FCI")]),v._v(" "),_("li",[_("strong",[v._v("可流畅交互时间")]),v._v("：用户第一次可以持续与页面交互的时间，"),_("strong",[v._v("TTI")])])]),v._v(" "),_("h4",{attrs:{id:"lighthouse-metrics"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#lighthouse-metrics"}},[v._v("#")]),v._v(" Lighthouse Metrics")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("FCP")]),v._v("（First Contentful Paint）")]),v._v(" "),_("li",[_("strong",[v._v("TTI")]),v._v("（Time to interactive）")]),v._v(" "),_("li",[_("strong",[v._v("SI")]),v._v("（Speed Index）")]),v._v(" "),_("li",[_("strong",[v._v("TBT")]),v._v("（Total Blocking Time）")]),v._v(" "),_("li",[_("strong",[v._v("LCP")]),v._v("（Largest Contentful Paint）")]),v._v(" "),_("li",[_("strong",[v._v("CLS")]),v._v("（Cumulative Layout Shift）")])]),v._v(" "),_("p",[v._v("有了指标后，我们就有了衡量页面性能的具体依据。")]),v._v(" "),_("p",[v._v("接着，我们开始着手对我们关心的指标进行优化了。")]),v._v(" "),_("p",[v._v("然而，指标只是页面呈现过程的一种时间度量，比如LCP2.6s，说明页面载入2.6s后，可视区域中的最大元素被渲染出来。优化的目标则是将2.6s缩短，比如缩短到1.6s。")]),v._v(" "),_("p",[v._v("因此，为了缩短这个时间，我们还需要了解页面载入到可视区域的最大元素被渲染这个过程中，发生了哪些事情。")]),v._v(" "),_("h2",{attrs:{id:"三、页面呈现过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、页面呈现过程"}},[v._v("#")]),v._v(" 三、页面呈现过程")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("加载过程")]),v._v(" "),_("ul",[_("li",[v._v("DNS解析URL")]),v._v(" "),_("li",[v._v("内部重定向")]),v._v(" "),_("li",[v._v("查找HTTP缓存")]),v._v(" "),_("li",[v._v("发起网络请求\n"),_("ul",[_("li",[v._v("应用层：DNS解析、准备HTTP请求消息")]),v._v(" "),_("li",[v._v("表示层：HTTP/2二进制分帧")]),v._v(" "),_("li",[v._v("会话层：应用程序委托操作系统建立TCP连接、TLS协商")]),v._v(" "),_("li",[v._v("传输层：封装成报文段")]),v._v(" "),_("li",[v._v("网络层：封装成数据报")]),v._v(" "),_("li",[v._v("数据链路层：封装成帧")]),v._v(" "),_("li",[v._v("物理层：数字转换为电信号")])])]),v._v(" "),_("li",[v._v("请求达到代理服务器\n"),_("ul",[_("li",[v._v("CDN服务器")]),v._v(" "),_("li",[v._v("负载均衡器")])])]),v._v(" "),_("li",[v._v("请求转发到服务器\n"),_("ul",[_("li",[v._v("拆包和组装")]),v._v(" "),_("li",[v._v("处理请求")]),v._v(" "),_("li",[v._v("返回响应")])])]),v._v(" "),_("li",[v._v("浏览器接收响应\n"),_("ul",[_("li",[v._v("HTTP重定向")]),v._v(" "),_("li",[v._v("检测响应体")])])])])]),v._v(" "),_("li",[_("strong",[v._v("渲染过程")]),v._v(" "),_("ul",[_("li",[v._v("解析HTML\n"),_("ul",[_("li",[v._v("预解析")]),v._v(" "),_("li",[v._v("下载CSS、JS（主要瓶颈）")]),v._v(" "),_("li",[v._v("执行JS（主要瓶颈）")])])]),v._v(" "),_("li",[v._v("生成CSSOM、DOM")]),v._v(" "),_("li",[v._v("生成布局树（Layout Tree）")]),v._v(" "),_("li",[v._v("生成图层树（分层）（Layer Tree）")]),v._v(" "),_("li",[v._v("生成绘制列表（Paint List）")]),v._v(" "),_("li",[v._v("光栅化（光栅化线程池）：按照绘制列表中的指令生成图片")]),v._v(" "),_("li",[v._v("分块（合成线程）")]),v._v(" "),_("li",[v._v("合成（合成线程）")])])])]),v._v(" "),_("h2",{attrs:{id:"四、性能优化策略"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四、性能优化策略"}},[v._v("#")]),v._v(" 四、性能优化策略")]),v._v(" "),_("blockquote",[_("p",[v._v("通过上一部分，我们了解了页面呈现的整个过程，这一部分，我们将针对其中的众多环节，提出一些优化方案。")])]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("加载阶段")]),v._v("：优化关键资源的加载速度（关键资源：能阻塞网页首次渲染的资源）\n"),_("ul",[_("li",[v._v("减少关键资源的数量\n"),_("ul",[_("li",[v._v("内联JS/CSS")]),v._v(" "),_("li",[v._v("异步加载JS")]),v._v(" "),_("li",[v._v("异步加载CSS")]),v._v(" "),_("li",[v._v("合理利用缓存")])])]),v._v(" "),_("li",[v._v("减少关键资源的大小\n"),_("ul",[_("li",[v._v("代码压缩")]),v._v(" "),_("li",[v._v("Tree-Shaking（清除多余代码优化打包体积）")])])]),v._v(" "),_("li",[v._v("降低关键资源的RTT（Round Trip Time）\n"),_("ul",[_("li",[v._v("合理使用缓存")]),v._v(" "),_("li",[v._v("CDN加速")]),v._v(" "),_("li",[v._v("HTTP2多路复用")]),v._v(" "),_("li",[v._v("DNS prefetch 域名提前寻址")])])])])]),v._v(" "),_("li",[_("strong",[v._v("渲染/交互阶段")]),v._v("：让单个帧的生成速度变快\n"),_("ul",[_("li",[v._v("图片优化\n"),_("ul",[_("li",[v._v("图片预加载")]),v._v(" "),_("li",[v._v("预加载LCP大图")]),v._v(" "),_("li",[v._v("图片格式/尺寸优化")]),v._v(" "),_("li",[v._v("异步加载屏幕外的图片")]),v._v(" "),_("li",[v._v("iconfont，css代替图片")])])]),v._v(" "),_("li",[v._v("减少JS脚本执行时间（使用Web Worker）")]),v._v(" "),_("li",[v._v("合理使用CSS动画（利用合成>重绘>重排）")]),v._v(" "),_("li",[v._v("使用RAF代替SetTImeout实现JS动画（RAF更准）")])])])]),v._v(" "),_("h2",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结")]),v._v(" "),_("p",[v._v("本章主要目的是构建一个网页性能优化的理论知识体系，主要介绍了：")]),v._v(" "),_("ul",[_("li",[v._v("性能优化的演进历史")]),v._v(" "),_("li",[v._v("性能检测和性能指标")]),v._v(" "),_("li",[v._v("页面呈现过程")]),v._v(" "),_("li",[v._v("性能优化策略")])]),v._v(" "),_("h2",{attrs:{id:"参考资料"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[v._v("#")]),v._v(" 参考资料")]),v._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://www.processon.com/mindmap/6141bfd0e401fd1a0e566c4a",target:"_blank",rel:"noopener noreferrer"}},[v._v("浏览器思维导图"),_("OutboundLink")],1)]),v._v(" "),_("li",[_("a",{attrs:{href:"https://web.dev/lighthouse-performance/",target:"_blank",rel:"noopener noreferrer"}},[v._v("性能检测"),_("OutboundLink")],1)]),v._v(" "),_("li",[_("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/121056616",target:"_blank",rel:"noopener noreferrer"}},[v._v("前端性能优化24条建议(2020)"),_("OutboundLink")],1)]),v._v(" "),_("li",[_("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/144476736",target:"_blank",rel:"noopener noreferrer"}},[v._v("性能提升80%！详解饿了么H5性能优化秘诀"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=l.exports}}]);