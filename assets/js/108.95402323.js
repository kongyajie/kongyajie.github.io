(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{398:function(_,v,t){"use strict";t.r(v);var a=t(10),e=Object(a.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"浏览器-http协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器-http协议"}},[_._v("#")]),_._v(" 浏览器&HTTP协议")]),_._v(" "),v("h2",{attrs:{id:"一、如何发展的-解决什么问题-历史"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、如何发展的-解决什么问题-历史"}},[_._v("#")]),_._v(" 一、如何发展的？解决什么问题？- 历史")]),_._v(" "),v("ul",[v("li",[_._v("1990年 The WorldWideWeb browser（Nexus平台）")]),_._v(" "),v("li",[_._v("1993年 NCSA Mosaic")]),_._v(" "),v("li",[_._v("1994年 Netscape Navigator")]),_._v(" "),v("li",[_._v("1995年 Microsoft Internet Explorer")]),_._v(" "),v("li",[_._v("1996年 Opera")]),_._v(" "),v("li",[_._v("2003年，Apple Safari")]),_._v(" "),v("li",[_._v("2004年 Mozilla Firefox")]),_._v(" "),v("li",[_._v("2008年 Google Chrome")]),_._v(" "),v("li",[_._v("2015年 Microsoft Edge")]),_._v(" "),v("li",[_._v("2016年 Vivaldi")])]),_._v(" "),v("h2",{attrs:{id:"二、如何构成的-架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、如何构成的-架构"}},[_._v("#")]),_._v(" 二、如何构成的？- 架构")]),_._v(" "),v("h3",{attrs:{id:"背景知识"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#背景知识"}},[_._v("#")]),_._v(" 背景知识")]),_._v(" "),v("ul",[v("li",[_._v("进程\n"),v("ul",[v("li",[_._v("进程是cpu资源分配的最小单位（是能拥有资源和独立运行的最小单位）")]),_._v(" "),v("li",[_._v("IPC 进程间通讯")])])]),_._v(" "),v("li",[_._v("线程\n"),v("ul",[v("li",[_._v("线程是cpu调度的最小单位（线程是建立在进程的基础上的一次程序运行单位，一个进程中可以有多个线程）")])])]),_._v(" "),v("li",[_._v("协程")])]),_._v(" "),v("h3",{attrs:{id:"_1、单进程浏览器时代"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、单进程浏览器时代"}},[_._v("#")]),_._v(" 1、单进程浏览器时代")]),_._v(" "),v("ul",[v("li",[_._v("特点：所有页面都运行在一个主进程中（网络线程、页面线程、其他线程）")]),_._v(" "),v("li",[_._v("IE6：单标签，一个页面一个窗口")]),_._v(" "),v("li",[_._v("缺点：不稳定、不流畅、不安全")])]),_._v(" "),v("h3",{attrs:{id:"_2、多进程浏览器时代"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、多进程浏览器时代"}},[_._v("#")]),_._v(" 2、多进程浏览器时代")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://oss-1252175178.cos.ap-shanghai.myqcloud.com/%E6%B5%8F%E8%A7%88%E5%99%A8/WebKit%E6%9E%B6%E6%9E%84.png",alt:""}})]),_._v(" "),v("p",[_._v("结构：")]),_._v(" "),v("ul",[v("li",[_._v("1个浏览器主进程：负责界面显示、用户交互、子进程管理，同时提供存储等功能")]),_._v(" "),v("li",[_._v("1个GPU进程：最初是为了实现3D CSS的效果，后来网页和浏览器UI界面也采用GPU绘制")]),_._v(" "),v("li",[_._v("1个网络进程：负责页面的网络资源加载")]),_._v(" "),v("li",[_._v("多个渲染进程：将HTML、CSS、JavaScript转换为用户可以与之交互的网页")]),_._v(" "),v("li",[_._v("多个插件进程：负责插件的运行")])]),_._v(" "),v("p",[_._v("优点：")]),_._v(" "),v("ul",[v("li",[_._v("稳定性：进程间相互隔离")]),_._v(" "),v("li",[_._v("流畅性：JS只影响当前的渲染进程；关闭页面，进程所占用的内存会被系统回收")]),_._v(" "),v("li",[_._v("安全性：安全沙箱")])]),_._v(" "),v("p",[_._v("缺点：")]),_._v(" "),v("ul",[v("li",[_._v("更高的资源占用、更复杂的体系架构")])]),_._v(" "),v("h3",{attrs:{id:"_3、未来面向服务的架构soa"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、未来面向服务的架构soa"}},[_._v("#")]),_._v(" 3、未来面向服务的架构SOA")]),_._v(" "),v("blockquote",[v("p",[_._v("为了解决这些问题，在 2016 年，Chrome 官方团队使用“面向服务的架构”（Services Oriented Architecture，简称 SOA）的思想设计了新的 Chrome 架构。也就是说 Chrome 整体架构会朝向现代操作系统所采用的“面向服务的架构” 方向发展，原来的各种模块会被重构成独立的服务（Service），每个服务（Service）都可以在独立的进程中运行，访问服务（Service）必须使用定义好的接口，通过 IPC 来通信，从而构建一个更内聚、松耦合、易于维护和扩展的系统，更好实现 Chrome 简单、稳定、高速、安全的目标。如果你对面向服务的架构感兴趣，你可以去网上搜索下资料，这里就不过多介绍了。Chrome 最终要把 UI、数据库、文件、设备、网络等模块重构为基础服务，类似操作系统底层服务")])]),_._v(" "),v("h3",{attrs:{id:"_4、浏览器的差异在哪里"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4、浏览器的差异在哪里"}},[_._v("#")]),_._v(" 4、浏览器的差异在哪里？")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("排版/渲染引擎：负责将标记内容、样式信息排版后输出至显示器或打印机")]),_._v(" "),v("ul",[v("li",[_._v("Chrome：Blink")]),_._v(" "),v("li",[_._v("Safari："),v("strong",[_._v("Webkit")])]),_._v(" "),v("li",[_._v("Mozilla：Gecko")]),_._v(" "),v("li",[_._v("Internet Explorer：Trident")]),_._v(" "),v("li",[_._v("Microsoft Edge：EdgeHTML")]),_._v(" "),v("li",[_._v("QQ浏览器/世界之窗/搜狗浏览器：Trident、Blink")])])]),_._v(" "),v("li",[v("p",[_._v("JS引擎：解释执行JS，由渲染引擎提供")]),_._v(" "),v("ul",[v("li",[_._v("Rhino，由Mozilla基金会管理，开放源代码，完全以Java编写。")]),_._v(" "),v("li",[v("strong",[_._v("SpiderMonkey")]),_._v("，第一款JavaScript引擎，早期用于Netscape Navigator，现时用于Mozilla Firefox。")]),_._v(" "),v("li",[v("strong",[_._v("V8")]),_._v("，开放源代码，由Google丹麦开发，是Google Chrome的一部分。")]),_._v(" "),v("li",[_._v("JavaScriptCore，开放源代码，用于Safari。")]),_._v(" "),v("li",[_._v("Chakra (JScript引擎)，用于Internet Explorer。")]),_._v(" "),v("li",[_._v("Chakra (JavaScript引擎)，用于Microsoft Edge。")])])]),_._v(" "),v("li",[v("p",[_._v("浏览器User-Agent")]),_._v(" "),v("blockquote",[v("p",[_._v("首部包含了一个特征字符串，用来让网络协议的对端来识别发起请求的用户代理软件的应用类型、操作系统、软件开发商以及版本号")])]),_._v(" "),v("p",[v("code",[_._v("User-Agent: Mozilla/<version> (<system-information>) <platform> (<platform-details>) <extensions>")])]),_._v(" "),v("p",[v("code",[_._v("Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36")])]),_._v(" "),v("p",[_._v("发展历程：")]),_._v(" "),v("ul",[v("li",[_._v("1、Netscape Navigator2.0 支持GIF，而Mosaic不支持，因此引入UA标识，告诉服务器有Mozilla标识时才发送GIF；")]),_._v(" "),v("li",[_._v("2、IE出版，也支持GIF了，但是UA上没有Mozilla标识，于是微软也在UA上加上了Mozilla标识；")]),_._v(" "),v("li",[_._v("3、Netscape在第一次浏览器大站中输给了IE，接着以MozillaFirefox重生，搞出了Gecko引擎，并在UA上加上了Gecko，Gecko开源后有许多其他浏览器基于它的代码二次开发，因此也都在UA上加上了Gecko。每一个都假装自己是Mozilla，每一个都使用了Gecko的代码。")]),_._v(" "),v("li",[_._v("4、接着一帮搞Linux的人弄了个浏览器Konqueror，引擎叫KHTML，他们觉得KHTML和Gecko一样好，于是在UA上加上了（KHTML，like Gecko）")]),_._v(" "),v("li",[_._v("5、Apple弄出了Safari，以KHTML为基础打造出Webkit，然后叫 AppleWebKit（KHTML，like Gecko）")]),_._v(" "),v("li",[_._v("6、Google又基于Webkit搞出了Chrome，因此它为了伪装成safari，webkit伪装成KHTML，KHTML伪装成Gecko，最后所有的浏览器都伪装成 Mozilla。")])])])]),_._v(" "),v("h2",{attrs:{id:"三、如何动起来的-页面循环系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、如何动起来的-页面循环系统"}},[_._v("#")]),_._v(" 三、如何动起来的？- 页面循环系统")]),_._v(" "),v("h3",{attrs:{id:"概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[_._v("#")]),_._v(" 概述")]),_._v(" "),v("blockquote",[v("p",[_._v("背景：渲染进程中的渲染主线程是单线程的,而它又要处理非常多的任务。")]),_._v(" "),v("p",[_._v("总体上：EventLoop 使用了事件循环+消息队列来实现")])]),_._v(" "),v("h3",{attrs:{id:"eventloop运行流程-重要"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#eventloop运行流程-重要"}},[_._v("#")]),_._v(" EventLoop运行流程（重要）")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://oss-1252175178.cos.ap-shanghai.myqcloud.com/JS/%E6%B5%8F%E8%A7%88%E5%99%A8EventLoop.png",alt:""}})]),_._v(" "),v("h3",{attrs:{id:"微任务执行流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微任务执行流程"}},[_._v("#")]),_._v(" 微任务执行流程")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://oss-1252175178.cos.ap-shanghai.myqcloud.com/JS/%E6%B5%8F%E8%A7%88%E5%99%A8EventLoop%E6%B5%81%E7%A8%8B-%E5%BE%AE%E4%BB%BB%E5%8A%A1.png",alt:""}})]),_._v(" "),v("h2",{attrs:{id:"四、如何从url到页面显示的-重要"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、如何从url到页面显示的-重要"}},[_._v("#")]),_._v(" 四、如何从URL到页面显示的？(重要)")]),_._v(" "),v("h3",{attrs:{id:"_1、三个阶段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、三个阶段"}},[_._v("#")]),_._v(" 1、三个阶段")]),_._v(" "),v("ul",[v("li",[_._v("网络请求阶段\n"),v("ul",[v("li",[_._v("判断是URL还是关键字")]),_._v(" "),v("li",[_._v("DNS解析")]),_._v(" "),v("li",[_._v("发送HTTP请求")]),_._v(" "),v("li",[_._v("服务器处理")])])]),_._v(" "),v("li",[_._v("解析白屏阶段\n"),v("ul",[v("li",[_._v("解析HTML（预解析、下载CSS/JS、执行JS）")]),_._v(" "),v("li",[_._v("根据HTML生成DOM（为什么建议CSS要放在头部、JS放尾部？）")]),_._v(" "),v("li",[_._v("根据CSS生成CSSOM（计算样式Style）")]),_._v(" "),v("li",[_._v("将DOM树和CSSOM整合成LayoutTree（计算几何布局，过滤不需要显示的元素如header/script标签、display:none等）")])])]),_._v(" "),v("li",[_._v("页面渲染阶段\n"),v("ul",[v("li",[_._v("生成图层树LayerTree（分层，从宏观上提升渲染效率）")]),_._v(" "),v("li",[_._v("生成绘制列表PaintList")]),_._v(" "),v("li",[_._v("光栅化（按照绘制列表中的指令生成图片）")]),_._v(" "),v("li",[_._v("分块（优先绘制靠近视口的图块，从微观层面提升渲染效率）")]),_._v(" "),v("li",[_._v("合成（图层合并，发送到缓冲区）")])])])]),_._v(" "),v("h3",{attrs:{id:"_2、完整的渲染流水线示意图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、完整的渲染流水线示意图"}},[_._v("#")]),_._v(" 2、完整的渲染流水线示意图")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://oss-1252175178.cos.ap-shanghai.myqcloud.com/%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%AE%8C%E6%95%B4%E7%9A%84%E6%B8%B2%E6%9F%93%E6%B5%81%E6%B0%B4%E7%BA%BF%E7%A4%BA%E6%84%8F%E5%9B%BE.webp",alt:""}})]),_._v(" "),v("h3",{attrs:{id:"_3、含有-javascript-和-css-的页面渲染流水线"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、含有-javascript-和-css-的页面渲染流水线"}},[_._v("#")]),_._v(" 3、含有 JavaScript 和 CSS 的页面渲染流水线")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://oss-1252175178.cos.ap-shanghai.myqcloud.com/%E6%B5%8F%E8%A7%88%E5%99%A8/%E5%90%AB%E6%9C%89%20JavaScript%20%E5%92%8C%20CSS%20%E7%9A%84%E9%A1%B5%E9%9D%A2%E6%B8%B2%E6%9F%93%E6%B5%81%E6%B0%B4%E7%BA%BF.webp",alt:""}})]),_._v(" "),v("h3",{attrs:{id:"_4、关键渲染路径"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4、关键渲染路径"}},[_._v("#")]),_._v(" 4、关键渲染路径")]),_._v(" "),v("p",[_._v("渲染流水线、浏览器的一帧中包含了哪些过程：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://oss-1252175178.cos.ap-shanghai.myqcloud.com/%E6%B5%8F%E8%A7%88%E5%99%A8/%E6%B5%8F%E8%A7%88%E5%99%A8-%E5%85%B3%E9%94%AE%E6%B8%B2%E6%9F%93%E8%B7%AF%E5%BE%84.png",alt:""}})]),_._v(" "),v("p",[_._v("性能对比：合成 > 重绘 > 重排")]),_._v(" "),v("p",[_._v("举个🌰：transform:translate(xxx,xxx) > div.style.background > div.style.height")]),_._v(" "),v("ul",[v("li",[_._v("合成：几何变换和透明度变换可以直接通过"),v("strong",[_._v("合成线程")]),_._v("处理，无需主线程参与，大大提升渲染效率，可以此优化动画或特效")]),_._v(" "),v("li",[_._v("触发合成的条件：\n"),v("ul",[v("li",[_._v("设置will-change: transform")]),_._v(" "),v("li",[_._v("设置opacity")]),_._v(" "),v("li",[v("code",[_._v("3d transform")])]),_._v(" "),v("li",[v("code",[_._v("<canvas>")])]),_._v(" "),v("li",[v("code",[_._v("<video>")])])])])]),_._v(" "),v("h2",{attrs:{id:"五、如何进行性能优化-重要"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#五、如何进行性能优化-重要"}},[_._v("#")]),_._v(" 五、如何进行性能优化？（重要）")]),_._v(" "),v("h3",{attrs:{id:"_1、网络请求阶段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、网络请求阶段"}},[_._v("#")]),_._v(" 1、网络请求阶段")]),_._v(" "),v("blockquote",[v("p",[_._v("原则：优化关键资源的加载速度")])]),_._v(" "),v("ul",[v("li",[_._v("减少关键资源的个数\n"),v("ul",[v("li",[_._v("内联/异步加载JS/CSS")]),_._v(" "),v("li",[_._v("打包合并代码（webpack打包）")]),_._v(" "),v("li",[_._v("合理利用缓存（webpack打包设置contenthash）")]),_._v(" "),v("li",[_._v("SSR服务端渲染")])])]),_._v(" "),v("li",[_._v("减少关键资源的大小\n"),v("ul",[v("li",[_._v("代码压缩（webpack打包压缩混淆）")]),_._v(" "),v("li",[_._v("Tree-Shaking（清除多余代码优化项目打包体积，利用ES6 Module引入进行静态分析，判断那些模块和变量未被使用或者引用，进而删除对应代码）")])])]),_._v(" "),v("li",[_._v("降低关键资源的 RTT（Round Trip Time）次数\n"),v("ul",[v("li",[_._v("CDN加速")]),_._v(" "),v("li",[_._v("使用HTTP2")]),_._v(" "),v("li",[_._v("合理利用缓存")]),_._v(" "),v("li",[_._v("DNS prefetch域名提前寻址")])])])]),_._v(" "),v("h3",{attrs:{id:"_2、渲染交互阶段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、渲染交互阶段"}},[_._v("#")]),_._v(" 2、渲染交互阶段")]),_._v(" "),v("blockquote",[v("p",[_._v("原则：让单个帧的生成速度变快")])]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("图片优化")]),_._v(" "),v("ul",[v("li",[_._v("图片预加载，预加载LCP大图")]),_._v(" "),v("li",[_._v("图片格式/尺寸优化")]),_._v(" "),v("li",[_._v("图片懒加载-异步加载屏幕外的图片")]),_._v(" "),v("li",[_._v("iconfont，css代替图片")])])]),_._v(" "),v("li",[v("strong",[_._v("动画优化")]),_._v(" "),v("ul",[v("li",[_._v("合理利用CSS合成动画/特效（设置will-change: transform, opacity）")]),_._v(" "),v("li",[_._v("使用RAF代替setTImeout实现JS动画")])])]),_._v(" "),v("li",[v("strong",[_._v("JS性能优化")]),_._v(" "),v("ul",[v("li",[_._v("对DOM查询进行缓存")]),_._v(" "),v("li",[_._v("多个DOM操作一起插入DOM结构（createDocumentFragment）")]),_._v(" "),v("li",[_._v("节流throttle 防抖 debounce")]),_._v(" "),v("li",[_._v("使用Web Worker")])])])]),_._v(" "),v("h2",{attrs:{id:"六、如何与服务器通讯-计算机网络"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#六、如何与服务器通讯-计算机网络"}},[_._v("#")]),_._v(" 六、如何与服务器通讯？计算机网络")]),_._v(" "),v("h3",{attrs:{id:"_1、七层网络模型-待完善"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、七层网络模型-待完善"}},[_._v("#")]),_._v(" 1、七层网络模型（待完善）")]),_._v(" "),v("ul",[v("li",[_._v("应用层")]),_._v(" "),v("li",[_._v("传输层")]),_._v(" "),v("li",[_._v("数据链路层")]),_._v(" "),v("li",[_._v("物理层")])]),_._v(" "),v("h3",{attrs:{id:"_2、http协议的演化-重要"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、http协议的演化-重要"}},[_._v("#")]),_._v(" 2、HTTP协议的演化（重要）")]),_._v(" "),v("ul",[v("li",[_._v("HTTP0.9\n"),v("ul",[v("li",[_._v("核心：超文本传输协议")]),_._v(" "),v("li",[_._v("不足：仅支持HTML格式文件的传输")])])]),_._v(" "),v("li",[_._v("HTTP1.0\n"),v("ul",[v("li",[_._v("核心：支持多种类型文件")]),_._v(" "),v("li",[_._v("变化\n"),v("ul",[v("li",[_._v("新增请求头/响应头，支持多种类型的文件下载")]),_._v(" "),v("li",[_._v("新增状态码")]),_._v(" "),v("li",[_._v("新增Cache缓存")]),_._v(" "),v("li",[_._v("新增用户代理user-agent")])])]),_._v(" "),v("li",[_._v("不足：一个请求一个TCP连接")])])]),_._v(" "),v("li",[_._v("HTTP1.1\n"),v("ul",[v("li",[_._v("核心：提高传输速度")]),_._v(" "),v("li",[_._v("变化\n"),v("ul",[v("li",[_._v("增加了持久连接：浏览器为每个域名最多同时维护 6 个 TCP 持久连接，支持使用 CDN 的实现域名分片机制")]),_._v(" "),v("li",[_._v("新增Cookie和安全机制")])])]),_._v(" "),v("li",[_._v("不足\n"),v("ul",[v("li",[_._v("TCP慢启动，多条 TCP 连接竞争固定的带宽（TCP自身问题）")]),_._v(" "),v("li",[_._v("队头阻塞（HTTP2解决）")])])])])]),_._v(" "),v("li",[_._v("HTTP2\n"),v("ul",[v("li",[_._v("核心：继续提高传输速度")]),_._v(" "),v("li",[_._v("变化：\n"),v("ul",[v("li",[_._v("一个域名只使用一个 TCP 长连接来传输数据")]),_._v(" "),v("li",[_._v("添加二进制分帧层拆分请求包，来实现多路复用机制，进而消除队头阻塞问题（重要）")]),_._v(" "),v("li",[_._v("可以设置请求的优先级")]),_._v(" "),v("li",[_._v("服务器推送（服务器预览index.html，主动推送css/js文件）")]),_._v(" "),v("li",[_._v("头部压缩（采用前后端统一的映射和一些算法）")])])]),_._v(" "),v("li",[_._v("不足\n"),v("ul",[v("li",[_._v("TCP上的队头阻塞：在 TCP 传输过程中，由于单个数据包的丢失而造成的阻塞")]),_._v(" "),v("li",[_._v("TCP建立连接慢：三次握手，以及可能的TLS层握手")])])])])]),_._v(" "),v("li",[_._v("HTTP3\n"),v("ul",[v("li",[_._v("核心：解决TCP的一些问题")]),_._v(" "),v("li",[_._v("变化：QUIC协议（基于UDP）")]),_._v(" "),v("li",[_._v("实现了类似 TCP 的流量控制、传输可靠性的功能")]),_._v(" "),v("li",[_._v("集成TLS加密功能")]),_._v(" "),v("li",[_._v("实现HTTP2的多路复用")]),_._v(" "),v("li",[_._v("实现了快速握手功能")]),_._v(" "),v("li",[_._v("不足\n"),v("ul",[v("li",[_._v("中间设备僵化")]),_._v(" "),v("li",[_._v("UDP优化不及TCP")]),_._v(" "),v("li",[_._v("浏览器和服务器支持度较低")])])])])])]),_._v(" "),v("h3",{attrs:{id:"_3、http协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、http协议"}},[_._v("#")]),_._v(" 3、HTTP协议")]),_._v(" "),v("p",[v("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2016/08/http.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("HTTP协议入门"),v("OutboundLink")],1)]),_._v(" "),v("h4",{attrs:{id:"_1-ajax"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-ajax"}},[_._v("#")]),_._v(" 1）ajax")]),_._v(" "),v("p",[v("strong",[_._v("XMLHttpRequest")])]),_._v(" "),v("div",{staticClass:"language-js line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("const")]),_._v(" xhr "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("new")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[_._v("XMLHttpRequest")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v("\nxhr"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("open")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[_._v("'GET'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[_._v("'/api'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token boolean"}},[_._v("true")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v("\nxhr"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),v("span",{pre:!0,attrs:{class:"token function-variable function"}},[_._v("onreadystatechange")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("function")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n  "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("if")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("xhr"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),_._v("readyState "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("===")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("4")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("if")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("xhr"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),_._v("status "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("===")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("200")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("{")]),_._v("\n      "),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("alert")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("xhr"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),_._v("responseText"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v("\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n  "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("}")]),_._v("\nxhr"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("send")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("null")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v("\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br"),v("span",{staticClass:"line-number"},[_._v("3")]),v("br"),v("span",{staticClass:"line-number"},[_._v("4")]),v("br"),v("span",{staticClass:"line-number"},[_._v("5")]),v("br"),v("span",{staticClass:"line-number"},[_._v("6")]),v("br"),v("span",{staticClass:"line-number"},[_._v("7")]),v("br"),v("span",{staticClass:"line-number"},[_._v("8")]),v("br"),v("span",{staticClass:"line-number"},[_._v("9")]),v("br"),v("span",{staticClass:"line-number"},[_._v("10")]),v("br")])]),v("p",[v("strong",[_._v("状态码")])]),_._v(" "),v("p",[_._v("xhr.readyState")]),_._v(" "),v("ul",[v("li",[_._v("0：未初始化，还未调用send方法")]),_._v(" "),v("li",[_._v("1：载入，已调用send方法，正发送请求")]),_._v(" "),v("li",[_._v("2：载入完成，send方法执行完毕，已接收到全部响应内容")]),_._v(" "),v("li",[_._v("3：交互，正在解析响应内容")]),_._v(" "),v("li",[_._v("4：完成，响应内容解析完成，可以再客户端调用")])]),_._v(" "),v("p",[_._v("xhr.status")]),_._v(" "),v("ul",[v("li",[_._v("2xx：请求成功，200")]),_._v(" "),v("li",[_._v("3xx：重定向，301永久，302临时，304访问资源未发生变化（可使用缓存）")]),_._v(" "),v("li",[_._v("4xx：客户端请求错误，404访问地址找不到，403无权限访问")]),_._v(" "),v("li",[_._v("5xx：服务端错误")])]),_._v(" "),v("h4",{attrs:{id:"_2-跨域-同源策略-跨域解决方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-跨域-同源策略-跨域解决方案"}},[_._v("#")]),_._v(" 2）跨域：同源策略，跨域解决方案")]),_._v(" "),v("p",[v("strong",[_._v("同源策略")])]),_._v(" "),v("ul",[v("li",[_._v("ajax请求时，"),v("strong",[_._v("浏览器")]),_._v("要求当前页面和server必须同源（安全）")]),_._v(" "),v("li",[_._v("同源：协议、域名、端口，三者必须一致")]),_._v(" "),v("li",[_._v("加载 img css js 可无视同源策略")])]),_._v(" "),v("p",[v("strong",[_._v("跨域方式")])]),_._v(" "),v("p",[_._v("1：JSONP")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("<script>")]),_._v(" 可绕过跨域限制")]),_._v(" "),v("li",[_._v("服务器可以任意动态拼接数据返回")]),_._v(" "),v("li",[_._v("所以，"),v("code",[_._v("<script>")]),_._v(" 就可以获得跨域的数据，只要服务端愿意返回")])]),_._v(" "),v("p",[_._v("2：CORS（跨院资源共享）-服务器设置 http header "),v("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2016/04/cors.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("cors"),v("OutboundLink")],1)]),_._v(" "),v("ul",[v("li",[_._v("Access-Control-Allow-Origin: http://api.bob.com")]),_._v(" "),v("li",[_._v("Access-Control-Allow-Methods: GET, POST, PUT")]),_._v(" "),v("li",[_._v("Access-Control-Allow-Headers: X-Custom-Header")])]),_._v(" "),v("p",[v("strong",[_._v("几个名词的对比")])]),_._v(" "),v("ul",[v("li",[_._v("技术名词：ajax（asyn json and xml）")]),_._v(" "),v("li",[_._v("浏览器 API： XMLHttpRequest、Fetch（xhr的升级版，使用更简洁，支持promise）")]),_._v(" "),v("li",[_._v("插件/库：jquery、axios")])]),_._v(" "),v("h4",{attrs:{id:"_3-浏览器存储"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-浏览器存储"}},[_._v("#")]),_._v(" 3）浏览器存储")]),_._v(" "),v("p",[v("strong",[_._v("cookie")])]),_._v(" "),v("ul",[v("li",[_._v("用于浏览器和server进行通讯")]),_._v(" "),v("li",[_._v("document.cookie（不同key追加，同key会覆盖）")]),_._v(" "),v("li",[_._v("缺点：\n"),v("ul",[v("li",[_._v("存储太小，最大4kb；")]),_._v(" "),v("li",[_._v("http请求时需要发送到服务端，增加请求数据量")]),_._v(" "),v("li",[_._v("只能用 document.cookie 来修改，太过简陋")])])])]),_._v(" "),v("p",[v("strong",[_._v("localStorage 和 sessionStorage")])]),_._v(" "),v("ul",[v("li",[_._v("HTML5专门为存储而设计，最大可存5M")]),_._v(" "),v("li",[_._v("API简单易用 setTime getItem")]),_._v(" "),v("li",[_._v("不会随着 http 请求发送出去")]),_._v(" "),v("li",[_._v("localStorage 数据会永久存储，除非代码或手动删除")]),_._v(" "),v("li",[_._v("sessionStorage 数据只存在于当前会话，浏览器关闭则清空")])]),_._v(" "),v("p",[v("strong",[_._v("三者的区别")])]),_._v(" "),v("ul",[v("li",[_._v("容量")]),_._v(" "),v("li",[_._v("API")]),_._v(" "),v("li",[_._v("是否跟随http请求发送出去")])]),_._v(" "),v("h4",{attrs:{id:"_4-http"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-http"}},[_._v("#")]),_._v(" 4）HTTP")]),_._v(" "),v("p",[v("strong",[_._v("http 常见的状态码有哪些")])]),_._v(" "),v("ul",[v("li",[_._v("1xx 服务器收到请求")]),_._v(" "),v("li",[_._v("2xx 请求成功，如200-成功")]),_._v(" "),v("li",[_._v("3xx 重定向，如301-永久重定向，302-临时重定向 304-资源已被请求过且未被修改")]),_._v(" "),v("li",[_._v("4xx 客户端错误，如401-Unauthorized当前请求需要用户验证 403 Forbidden 服务器已经收到请求，但拒绝执行，没有权限 404-Not Found 服务器无法根据用户的请求找到资源")]),_._v(" "),v("li",[_._v("5xx 服务端错误，如500-服务器错误 504-网关超时")])]),_._v(" "),v("p",[v("strong",[_._v("http 常见的header有哪些")])]),_._v(" "),v("ul",[v("li",[_._v("常见的 Request Headers\n"),v("ul",[v("li",[_._v("Accept 浏览器可接收的数据格式")]),_._v(" "),v("li",[_._v("Accept-Encoding 浏览器可接收的压缩算法，如gzip")]),_._v(" "),v("li",[_._v("Accept-Lan 浏览器可接收的语言，如zh-CH")]),_._v(" "),v("li",[_._v("Connection: keep-alive 一次TCP链接重复使用")]),_._v(" "),v("li",[_._v("cookie")]),_._v(" "),v("li",[_._v("Host")]),_._v(" "),v("li",[_._v("User-Agent 浏览器信息（简称UA）")])])]),_._v(" "),v("li",[_._v("常见的 Response Headers\n"),v("ul",[v("li",[_._v("Content-Type 返回数据的格式，如 application/json")]),_._v(" "),v("li",[_._v("Content-length 返回数据的大小，多少字节")]),_._v(" "),v("li",[_._v("Content-Encoding 返回数据的压缩算法，如gzip")]),_._v(" "),v("li",[_._v("Set-Cookie")]),_._v(" "),v("li",[_._v("Cache-Control Expires")]),_._v(" "),v("li",[_._v("Last-Modified If-Modified-Since")]),_._v(" "),v("li",[_._v("Etag If-None-Match")])])])]),_._v(" "),v("p",[v("strong",[_._v("什么是 Restful API")])]),_._v(" "),v("ul",[v("li",[v("p",[_._v("①　一种新的API设计方法")])]),_._v(" "),v("li",[v("p",[_._v("②　与传统API设计的区别 (背)：传统API设计:把每个url当做一个功能；Restful API 设计: 把每个url当做一个唯一的资源")])]),_._v(" "),v("li",[v("p",[_._v("③　如何设计成一个资源?：尽量不用url参数;  用/api/list/2  代替  /api/list?pageIndex=2对应的后端: get(‘/api/list/:pageIndex’)用method表示操作类型 ;post只新建,get只获取,其它methods类推")])]),_._v(" "),v("li",[v("p",[_._v("get获取数据")])]),_._v(" "),v("li",[v("p",[_._v("post 新建数据")])]),_._v(" "),v("li",[v("p",[_._v("patch/put 更新数据")])]),_._v(" "),v("li",[v("p",[_._v("delete 删除数据")])])]),_._v(" "),v("h4",{attrs:{id:"_5-描述一下-http-的缓存机制-重要"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-描述一下-http-的缓存机制-重要"}},[_._v("#")]),_._v(" 5）描述一下 http 的缓存机制（重要）")]),_._v(" "),v("p",[v("a",{attrs:{href:"https://segmentfault.com/a/1190000015245578",target:"_blank",rel:"noopener noreferrer"}},[_._v("浏览器的强缓存与弱缓存"),v("OutboundLink")],1)]),_._v(" "),v("blockquote",[v("p",[_._v("目的：缓存可以减少网络请求的次数和时间")])]),_._v(" "),v("p",[v("strong",[_._v("缓存分类")])]),_._v(" "),v("ul",[v("li",[_._v("强缓存（本地缓存）")]),_._v(" "),v("li",[_._v("弱缓存（协商缓存）")])]),_._v(" "),v("p",[v("strong",[_._v("请求一个静态资源时的HTTP流程")])]),_._v(" "),v("ol",[v("li",[v("strong",[_._v("强缓存阶段")]),_._v("：先在本地查找该资源，如果发现该资源，并且其他限制也没有问题(比如:缓存有效时间)，就命中强缓存，返回200，直接使用强缓存，并且不会发送请求到服务器")]),_._v(" "),v("li",[v("strong",[_._v("弱缓存阶段")]),_._v("：在本地缓存中找到该资源，发送一个http请求到服务器，服务器判断这个资源没有被改动过，则返回304，让浏览器使用该资源。")]),_._v(" "),v("li",[v("strong",[_._v("缓存失败阶段(重新请求)")]),_._v("：当服务器发现该资源被修改过，或者在本地没有找到该缓存资源，服务器则返回该资源的数据。")])]),_._v(" "),v("p",[v("strong",[_._v("强缓存")])]),_._v(" "),v("blockquote",[v("p",[_._v("强缓存是利用Expires或者Cache-Control，让原始服务器为文件设置一个过期时间，在多长时间内可以将这些内容视为最新的。")])]),_._v(" "),v("ol",[v("li",[v("p",[_._v("初次请求")])]),_._v(" "),v("li",[v("p",[_._v("返回资源，和 Cache-Control")])]),_._v(" "),v("li",[v("p",[_._v("再次请求")])]),_._v(" "),v("li",[v("p",[_._v("返回本地缓存资源")])]),_._v(" "),v("li",[v("p",[_._v("Cache-Control（Expire被替代了）")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("max-age")])]),_._v(" "),v("li",[v("p",[_._v("no-cache")])]),_._v(" "),v("li",[v("p",[_._v("no-store")])]),_._v(" "),v("li",[v("p",[_._v("private")])]),_._v(" "),v("li",[v("p",[_._v("public")])])])])]),_._v(" "),v("p",[v("strong",[_._v("协商缓存")])]),_._v(" "),v("p",[_._v("详细流程：")]),_._v(" "),v("ul",[v("li",[_._v("客户端第一次向服务器发起请求,服务器将附加Last-Modified/ETag到所提供的资源上去")]),_._v(" "),v("li",[_._v("当再一次请求资源,如果没有命中强缓存,在执行在验证时,将上次请求时服务器返回的Last-Modified/ETag一起传递给服务器。")]),_._v(" "),v("li",[_._v("服务器检查该Last-Modified或ETag，并判断出该资源页面自上次客户端请求之后还未被修改，返回响应304和一个空的响应体。")])]),_._v(" "),v("p",[_._v("简单流程：")]),_._v(" "),v("ol",[v("li",[_._v("初次请求")]),_._v(" "),v("li",[_._v("返回资源，和资源标识（Last-modified / Etag）")]),_._v(" "),v("li",[_._v("再次请求，带着资源标识（if-Modified-Since / If-None-Match）")]),_._v(" "),v("li",[_._v("返回304，或返回资源和新的资源标识\nLast-Modified 资源的最后修改时间\nEtag 资源的唯一表示（一个字符串）\n会优先使用 Etag，Last-Modified 只能精确到秒级")])]),_._v(" "),v("p",[_._v("Etag 主要为了解决 Last-Modified 无法解决的一些问题：")]),_._v(" "),v("ul",[v("li",[_._v("一些文件也许内容并不改变(仅仅改变的修改时间)，这个时候我们不希望文件重新加载。（Etag值会触发缓存，Last-Modified不会触发）")]),_._v(" "),v("li",[_._v("If-Modified-Since能检查到的粒度是秒级的，当修改非常频繁时，- Last-Modified会触发缓存，而Etag的值不会触发，重新加载。")]),_._v(" "),v("li",[_._v("某些服务器不能精确的得到文件的最后修改时间。")])]),_._v(" "),v("p",[v("strong",[_._v("强缓存和协商缓存的异同")])]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("获取资源形式相同")]),_._v("：都是从缓存中获取")]),_._v(" "),v("li",[v("strong",[_._v("状态码不同")]),_._v("：强缓存返回200（from cache）、协商缓存返回304状态码")]),_._v(" "),v("li",[v("strong",[_._v("是否请求不同")]),_._v("：强缓存不发送请求，直接从缓存中取；协商缓存需发送请求到服务端，验证这个文件是否可使用（未改动过）")])]),_._v(" "),v("p",[v("strong",[_._v("刷新操作方式,对缓存的影响，不同的刷新方式,不同的缓存策略")])]),_._v(" "),v("ol",[v("li",[_._v("正常操作 : 地址栏输入url ,跳转链接,前进后退等; 两种缓存都有效")]),_._v(" "),v("li",[_._v("手动刷新 : F5 ,点击刷新按钮,右击菜单刷新; 仅协商缓存有效")]),_._v(" "),v("li",[_._v("强制刷新 : ctrl +f5  cmd + r;  都无效")])]),_._v(" "),v("p",[v("strong",[_._v("缓存设置")])]),_._v(" "),v("h4",{attrs:{id:"_6-简单请求-vs-非简单请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-简单请求-vs-非简单请求"}},[_._v("#")]),_._v(" 6）简单请求 vs 非简单请求")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("请求方法是以下三种方法之一：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("HEAD")])]),_._v(" "),v("li",[v("p",[_._v("GET")])]),_._v(" "),v("li",[v("p",[_._v("POST")])])])]),_._v(" "),v("li",[v("p",[_._v("HTTP的头信息不超出以下几种字段：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Accept")])]),_._v(" "),v("li",[v("p",[_._v("Accept-Language")])]),_._v(" "),v("li",[v("p",[_._v("Content-Language")])]),_._v(" "),v("li",[v("p",[_._v("Last-Event-ID")])]),_._v(" "),v("li",[v("p",[_._v("Content-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain")])])])])]),_._v(" "),v("p",[_._v("非简单请求是那种对服务器有特殊要求的请求，比如请求方法是PUT或DELETE，或者Content-Type字段的类型是application/json。")]),_._v(" "),v("h2",{attrs:{id:"七、如何保证浏览器安全"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#七、如何保证浏览器安全"}},[_._v("#")]),_._v(" 七、如何保证浏览器安全？")]),_._v(" "),v("h3",{attrs:{id:"_1、web页面安全"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1、web页面安全"}},[_._v("#")]),_._v(" 1、Web页面安全")]),_._v(" "),v("h4",{attrs:{id:"_1-同源策略-same-origin-policy"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-同源策略-same-origin-policy"}},[_._v("#")]),_._v(" 1）同源策略（Same-origin policy）")]),_._v(" "),v("blockquote",[v("p",[_._v("定义：如果两个 URL 的"),v("strong",[_._v("协议")]),_._v("、"),v("strong",[_._v("域名")]),_._v("和"),v("strong",[_._v("端口")]),_._v("都相同，我们就称这两个 URL 同源。")])]),_._v(" "),v("ul",[v("li",[_._v("限制：\n"),v("ul",[v("li",[_._v("同源策略限制了来自不同源的 JavaScript 脚本对当前 DOM 对象读和写的操作")]),_._v(" "),v("li",[_._v("同源策略限制了不同源的站点读取当前站点的 Cookie、IndexDB、LocalStorage 等数据")]),_._v(" "),v("li",[_._v("同源策略限制了通过 XMLHttpRequest Fetch直接进行跨域请求")])])])]),_._v(" "),v("h4",{attrs:{id:"_2-同源策略后门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-同源策略后门"}},[_._v("#")]),_._v(" 2）同源策略后门")]),_._v(" "),v("ul",[v("li",[_._v("可以任意引用第三方资源（图片、JS、CSS等）")]),_._v(" "),v("li",[_._v("跨域资源共享CORS（Cross Origin Resource Sharing）")]),_._v(" "),v("li",[_._v("两个不同源的 DOM 之间进行通信（跨文档消息机制 window.postMessage）")])]),_._v(" "),v("h4",{attrs:{id:"_3-后门导致的攻击"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-后门导致的攻击"}},[_._v("#")]),_._v(" 3）后门导致的攻击")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("XSS攻击")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("定义：XSS 全称是 "),v("strong",[_._v("Cross Site Scripting")]),_._v("，为了与 CSS 区分开来，故简称 XSS，翻译过来就是“"),v("strong",[_._v("跨站脚本")]),_._v("”。XSS 攻击是指黑客往 HTML 文件中或者 DOM 中注入恶意脚本，从而在用户浏览页面时利用注入的恶意脚本对用户实施攻击的一种手段。")]),_._v(" "),v("p",[_._v("最开始的时候，这种攻击是通过跨域来实现的，所以叫“跨域脚本”。但是发展到现在，往 HTML 文件中注入恶意代码的方式越来越多了，所以是否跨域注入脚本已经不是唯一的注入手段了，但是 XSS 这个名字却一直保留至今。")])]),_._v(" "),v("li",[v("p",[_._v("常见的三种XSS攻击模式")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("存储型XSS攻击（服务器漏洞）")]),_._v(" "),v("ul",[v("li",[_._v("首先黑客利用站点漏洞将一段恶意 JavaScript 代码提交到网站的数据库中；")])]),_._v(" "),v("ul",[v("li",[v("p",[_._v("然后用户向网站请求包含了恶意 JavaScript 脚本的页面；")])]),_._v(" "),v("li",[v("p",[_._v("当用户浏览该页面的时候，恶意脚本就会将用户的 Cookie 信息等数据上传到服务器。")])])])]),_._v(" "),v("li",[v("strong",[_._v("反射型XSS攻击（服务器漏洞）")]),_._v(" "),v("ul",[v("li",[_._v("我们会发现用户将一段含有恶意代码的请求提交给 Web 服务器，Web 服务器接收到请求时，又将恶意代码反射给了浏览器端，这就是反射型 XSS 攻击。在现实生活中，黑客经常会通过 QQ 群或者邮件等渠道诱导用户去点击这些恶意链接，所以对于一些链接我们一定要慎之又慎。")])]),_._v(" "),v("ul",[v("li",[_._v("另外需要注意的是，"),v("strong",[_._v("Web 服务器不会存储反射型 XSS 攻击的恶意脚本，这是和存储型 XSS 攻击不同的地方。")])])])]),_._v(" "),v("li",[_._v("基于DOM的XSS攻击\n"),v("ul",[v("li",[_._v("基于 DOM 的 XSS 攻击是不牵涉到页面 Web 服务器的。具体来讲，黑客通过各种手段将恶意脚本注入用户的页面中，比如通过网络劫持在页面传输过程中修改 HTML 页面的内容，这种劫持类型很多，有通过 WiFi 路由器劫持的，有通过本地恶意软件来劫持的，它们的共同点是在 Web 资源传输过程或者在用户使用页面的过程中修改 Web 页面的数据。")])])])])]),_._v(" "),v("li",[v("p",[_._v("被注入恶意脚本的风险和后果")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("窃取Cookie信息")]),_._v("：恶意 JavaScript 可以通过“document.cookie”获取 Cookie 信息，然后通过 XMLHttpRequest 或者 Fetch 加上 CORS 功能将数据发送给恶意服务器；恶意服务器拿到用户的 Cookie 信息之后，就可以在其他电脑上模拟用户的登录，然后进行转账等操作。")]),_._v(" "),v("li",[v("strong",[_._v("监听用户行为")]),_._v("：恶意 JavaScript 可以使用“addEventListener”接口来监听键盘事件，比如可以获取用户输入的信用卡等信息，将其发送到恶意服务器。黑客掌握了这些信息之后，又可以做很多违法的事情。")]),_._v(" "),v("li",[v("strong",[_._v("修改DOM")]),_._v("：可以通过修改 DOM 伪造假的登录窗口，用来欺骗用户输入用户名和密码等信息。")]),_._v(" "),v("li",[v("strong",[_._v("生成浮窗广告")]),_._v("：还可以在页面内生成浮窗广告，这些广告会严重地影响用户体验。")])])]),_._v(" "),v("li",[v("p",[_._v("如何阻止")]),_._v(" "),v("ul",[v("li",[_._v("（后端）服务器对输入的内容进行过滤或者转码： 如将script标签替换成 "),v("code",[_._v("&ltscript&gt")])]),_._v(" "),v("li",[_._v("（后端）使用HttpOnly来保护重要的cookie信息：通常服务器可以将某些 Cookie 设置为 HttpOnly 标志，HttpOnly 是服务器通过 HTTP 响应头来设置的")]),_._v(" "),v("li",[_._v("（前端）充分利用好CSP，CSP有如下几个功能：\n"),v("ul",[v("li",[_._v("限制加载其他域下的资源文件，这样即使黑客插入了一个 JavaScript 文件，这个 JavaScript 文件也是无法被加载的；")]),_._v(" "),v("li",[_._v("禁止向第三方域提交数据，这样用户数据也不会外泄；")]),_._v(" "),v("li",[_._v("禁止执行内联脚本和未授权的脚本；")]),_._v(" "),v("li",[_._v("还提供了上报机制，这样可以帮助我们尽快发现有哪些 XSS 攻击，以便尽快修复问题。")])])]),_._v(" "),v("li",[_._v("（产品）添加验证码防止脚本冒充用户提交危险操作")])])])])]),_._v(" "),v("li",[v("p",[_._v("CSRF攻击")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("**定义：CSRF 英文全称是 Cross-site request forgery，所以又称为“跨站请求伪造”。是黑客利用了用户的登录状态，并通过第三方的站点来做一些坏事。**和 XSS 不同的是，CSRF 攻击不需要将恶意代码注入用户的页面，仅仅是利用服务器的漏洞和用户的登录状态来实施攻击")])]),_._v(" "),v("li",[v("p",[_._v("攻击方式")]),_._v(" "),v("ul",[v("li",[_._v("自动发起Get请求（图片）")]),_._v(" "),v("li",[_._v("自动发起Post请求（Form表单）")]),_._v(" "),v("li",[_._v("引诱用户点击链接（图片）")])])]),_._v(" "),v("li",[v("p",[_._v("攻击条件")]),_._v(" "),v("ul",[v("li",[_._v("目标站点一定要有CSRF漏洞")]),_._v(" "),v("li",[_._v("用户要登陆过目标站点，并在浏览器上保持有该站点的登陆状态")]),_._v(" "),v("li",[_._v("需要用户打开一个第三方站点，可以是黑客的站点，也可以是一些论坛")])])]),_._v(" "),v("li",[v("p",[_._v("如何防止CSRF攻击")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Cookie的SameSite属性")]),_._v(" "),v("ul",[v("li",[_._v("Strict 最为严格。如果 SameSite 的值是 Strict，那么浏览器会完全禁止第三方 Cookie。简言之，如果你从极客时间的页面中访问 InfoQ 的资源，而 InfoQ 的某些 Cookie 设置了 SameSite = Strict 的话，那么这些 Cookie 是不会被发送到 InfoQ 的服务器上的。只有你从 InfoQ 的站点去请求 InfoQ 的资源时，才会带上这些 Cookie。")])]),_._v(" "),v("ul",[v("li",[_._v("Lax 相对宽松一点。在跨站点的情况下，从第三方站点的链接打开和从第三方站点提交 Get 方式的表单这两种方式都会携带 Cookie。但如果在第三方站点中使用 Post 方法，或者通过 img、iframe 等标签加载的 URL，这些场景都不会携带 Cookie。而如果使用")])]),_._v(" "),v("ul",[v("li",[_._v("None 的话，在任何情况下都会发送 Cookie 数据。")])])]),_._v(" "),v("li",[v("p",[_._v("验证请求的来源站")]),_._v(" "),v("ul",[v("li",[_._v("Referer")]),_._v(" "),v("li",[_._v("Origin（优先判断）")])])]),_._v(" "),v("li",[v("p",[_._v("使用CSRF Token：原页面保留服务端生成的字符串Token，以此来区分第三方站点（无此Token）")])])])])])])]),_._v(" "),v("h4",{attrs:{id:"_4-浏览器安全机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-浏览器安全机制"}},[_._v("#")]),_._v(" 4）浏览器安全机制")]),_._v(" "),v("ul",[v("li",[_._v("内容安全策略 CSP：核心思想是让服务器决定浏览器能够加载哪些资源，让服务器决定浏览器是否能够执行内联 JavaScript 代码。")]),_._v(" "),v("li",[_._v("HttpOnly")]),_._v(" "),v("li",[_._v("SameSite和Origin")])]),_._v(" "),v("h3",{attrs:{id:"_2、浏览器系统安全"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2、浏览器系统安全"}},[_._v("#")]),_._v(" 2、浏览器系统安全")]),_._v(" "),v("ul",[v("li",[_._v("浏览器多进程架构\n"),v("ul",[v("li",[_._v("浏览器内核（浏览器主进程、网络进程、其他进程）")]),_._v(" "),v("li",[_._v("渲染内核（渲染进程）：使用安全沙箱")])])]),_._v(" "),v("li",[_._v("安全沙箱机制\n"),v("ul",[v("li",[_._v("**目的是隔离渲染进程和操作系统，让渲染进程没有访问操作系统的权利。**不能防止 XSS 或者 CSRF 一类的攻击，XSS 或者 CSRF 主要是利用网络资源获取用户的信息，这和操作系统没有关系的")]),_._v(" "),v("li",[v("strong",[_._v("对渲染进程的限制")]),_._v("：持久存储、网络访问、用户交互")])])]),_._v(" "),v("li",[_._v("站点隔离机制\n"),v("ul",[v("li",[_._v("所谓站点隔离是指 Chrome 将同一站点（包含了相同根域名和相同协议的地址）中相互关联的页面放到同一个渲染进程中执行。")]),_._v(" "),v("li",[_._v("效果：将恶意的 iframe 隔离在恶意进程内部")])])])]),_._v(" "),v("h3",{attrs:{id:"_3、浏览器网络安全-https-重要-待完善"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3、浏览器网络安全-https-重要-待完善"}},[_._v("#")]),_._v(" 3、浏览器网络安全 HTTPS（重要，待完善）")]),_._v(" "),v("h2",{attrs:{id:"八、未来发展趋势"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#八、未来发展趋势"}},[_._v("#")]),_._v(" 八、未来发展趋势")]),_._v(" "),v("h3",{attrs:{id:"pwa"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#pwa"}},[_._v("#")]),_._v(" PWA")]),_._v(" "),v("blockquote",[v("p",[_._v("定义：它是一套理念，渐进式增强 Web 的优势，并通过技术手段渐进式缩短和本地应用或者小程序的距离。\n基于这套理念之下的技术都可以归类到 PWA。")])]),_._v(" "),v("p",[_._v("Web页面缺少什么？")]),_._v(" "),v("ul",[v("li",[_._v("首先，Web 应用缺少离线使用能力，在离线或者在弱网环境下基本上是无法使用的。而用户需要的是沉浸式的体验，在离线或者弱网环境下能够流畅地使用是用户对一个应用的基本要求。")]),_._v(" "),v("li",[_._v("其次，Web 应用还缺少了消息推送的能力，因为作为一个 App 厂商，需要有将消息送达到应用的能力。")]),_._v(" "),v("li",[_._v("最后，Web 应用缺少一级入口，也就是将 Web 应用安装到桌面，在需要的时候直接从桌面打开 Web 应用，而不是每次都需要通过浏览器来打开。")])]),_._v(" "),v("p",[_._v("PWA解决方案：")]),_._v(" "),v("ul",[v("li",[_._v("离线使用能力（Service Worker）")]),_._v(" "),v("li",[_._v("消息推送（Service Worker）")]),_._v(" "),v("li",[_._v("一级入口（manifest.json，可以让开发者自定义桌面的图标、显示名称、启动方式等信息，还可以设置启动画面、页面主题颜色等信息。）")])]),_._v(" "),v("h3",{attrs:{id:"浏览器worker"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器worker"}},[_._v("#")]),_._v(" 浏览器Worker")]),_._v(" "),v("blockquote",[v("p",[_._v("概括地说，Web Worker，Service Worker和Worklet都是在与浏览器页面线程不同的线程上运行的脚本。它们的不同之处在于它们的使用位置以及启用这些用例所必须具备的功能。")])]),_._v(" "),v("ul",[v("li",[v("p",[v("strong",[_._v("Web Worker")]),_._v("：与浏览器的渲染管道挂钩，使我们能够对浏览器的渲染过程（例如样式和布局）进行低级访问。")])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("Service Worker")]),_._v("：是浏览器和网络之间的代理。通过拦截文档发出的请求，service worker可以将请求重定向到缓存，从而实现脱机访问。")])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("worklet")]),_._v("：是通用脚本，使我们能够从页面线程上卸载处理器密集型worker。")])])]),_._v(" "),v("h3",{attrs:{id:"webassembly"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#webassembly"}},[_._v("#")]),_._v(" WebAssembly")]),_._v(" "),v("h3",{attrs:{id:"webcomponent"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#webcomponent"}},[_._v("#")]),_._v(" WebComponent")]),_._v(" "),v("ul",[v("li",[_._v("提出背景：\n"),v("ul",[v("li",[_._v("满足界面组件化需求；")]),_._v(" "),v("li",[_._v("同时组件需要高内聚、低耦合")])])]),_._v(" "),v("li",[_._v("API设计\n"),v("ul",[v("li",[_._v("Custom elements 自定义元素")]),_._v(" "),v("li",[_._v("Shadow DOM 影子DOM\n"),v("ul",[v("li",[_._v("每个影子DOM都有一个 shadow root 根节点")]),_._v(" "),v("li",[_._v("可以看成是一个独立的DOM")]),_._v(" "),v("li",[_._v("有自己的样式、属性，内部样式不影响外部样式")]),_._v(" "),v("li",[_._v("影子 DOM 中的元素对于整个网页是不可见的")]),_._v(" "),v("li",[_._v("影子 DOM 的 CSS 不会影响到整个网页的 CSSOM")]),_._v(" "),v("li",[_._v("影子 DOM 内部的 CSS 只对内部的元素起作用")])])]),_._v(" "),v("li",[_._v("HTML templates HTML模板")])])]),_._v(" "),v("li",[_._v("实现原理\n"),v("ul",[v("li",[_._v("浏览器为了实现影子 DOM 的特性，在代码内部做了"),v("strong",[_._v("大量的条件判断")]),_._v("，比如当通过 DOM 接口去查找元素时，渲染引擎会去判断 geek-bang 属性下面的 shadow-root 元素是否是影子 DOM，如果是影子 DOM，那么就直接跳过 shadow-root 元素的查询操作。所以这样通过 DOM API 就无法直接查询到影子 DOM 的内部元素了。")]),_._v(" "),v("li",[_._v("另外，当生成布局树的时候，渲染引擎也会判断 geek-bang 属性下面的 shadow-root 元素是否是影子 DOM，如果是，那么在影子 DOM 内部元素的节点选择 CSS 样式的时候，会直接使用影子 DOM 内部的 CSS 属性。所以这样最终渲染出来的效果就是影子 DOM 内部定义的样式")])])]),_._v(" "),v("li",[_._v("和Vue/React区别\n"),v("ul",[v("li",[_._v("Web Component是提供原生API-来对css和dom进行隔离")]),_._v(" "),v("li",[_._v("Vue/React是采用取巧的手法\n"),v("ul",[v("li",[_._v("JS执行上下文的封装利用闭包")]),_._v(" "),v("li",[_._v("样式的封装利用文件hash值作为命名空间\n在CSS选择的时候多套一层选择条件")]),_._v(" "),v("li",[_._v("本质上还是全局的")])])])])])])])}),[],!1,null,null,null);v.default=e.exports}}]);