(window.webpackJsonp=window.webpackJsonp||[]).push([[208],{497:function(s,t,a){"use strict";a.r(t);var n=a(10),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("[TOC]")]),s._v(" "),t("h1",{attrs:{id:"week4-脚手架命令注册和执行过程开发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#week4-脚手架命令注册和执行过程开发"}},[s._v("#")]),s._v(" week4 - 脚手架命令注册和执行过程开发")]),s._v(" "),t("h2",{attrs:{id:"_01-本周导学"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_01-本周导学"}},[s._v("#")]),s._v(" 01-本周导学")]),s._v(" "),t("h3",{attrs:{id:"将收获什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将收获什么"}},[s._v("#")]),s._v(" 将收获什么")]),s._v(" "),t("ul",[t("li",[s._v("如何设计高性能脚手架")]),s._v(" "),t("li",[s._v("Node多进程开发")]),s._v(" "),t("li",[s._v("javascript面向对象的实战技巧")])]),s._v(" "),t("h3",{attrs:{id:"主要内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主要内容"}},[s._v("#")]),s._v(" 主要内容")]),s._v(" "),t("ul",[t("li",[s._v("图解"),t("strong",[s._v("高性能")]),s._v("脚手架架构设计方法")]),s._v(" "),t("li",[s._v("封装通用的Package和Command类")]),s._v(" "),t("li",[s._v("基于"),t("strong",[s._v("缓存+Node多进程")]),s._v("实现动态命令加载和执行")]),s._v(" "),t("li",[s._v("将业务逻辑和脚手架框架彻底解耦")])]),s._v(" "),t("h3",{attrs:{id:"附赠内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#附赠内容"}},[s._v("#")]),s._v(" 附赠内容")]),s._v(" "),t("ul",[t("li",[s._v("Node多进程开发进阶——child_process源码分析\n"),t("ul",[t("li",[s._v("深入Node源码看清spawn/exec/execFile/fork的本质区别，彻底搞懂Node多进程原理")])])])]),s._v(" "),t("h3",{attrs:{id:"关键词"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关键词"}},[s._v("#")]),s._v(" 关键词")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("高性能/可扩展")]),s._v("的脚手架 - "),t("strong",[s._v("利用缓存提升脚手架性能并解耦业务逻辑")])]),s._v(" "),t("li",[s._v("面向对象 - 利用Class完成javascript面向对象编程")]),s._v(" "),t("li",[t("strong",[s._v("Node多进程")]),s._v(" - 深入Node多进程原理")])]),s._v(" "),t("h3",{attrs:{id:"学习方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#学习方法"}},[s._v("#")]),s._v(" 学习方法")]),s._v(" "),t("ul",[t("li",[s._v("学以致用：将前两周中学到的知识进行实际应用（commander / Lerna 命令执行原理）")]),s._v(" "),t("li",[s._v("知识储备：面向对象、ES6新特性Class、shell脚本（macOS）、bat批处理文件等概念需要预先储备")]),s._v(" "),t("li",[s._v("充分实践：Node多进程是一门较为复杂的技术，需要同学们充分实践和思考")])]),s._v(" "),t("h3",{attrs:{id:"注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[s._v("#")]),s._v(" 注意事项")]),s._v(" "),t("ul",[t("li",[s._v("整体难度处于中上等，如果感觉有难度，一定要多看几遍视频，可以多暂停下来思考，必要的时候可以多画一些流程图、架构图理清思路")]),s._v(" "),t("li",[s._v("Node多进程高能预警")])]),s._v(" "),t("h3",{attrs:{id:"本周作业"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本周作业"}},[s._v("#")]),s._v(" 本周作业")]),s._v(" "),t("ul",[t("li",[s._v("根据课程讲解内容完成imooc-cli脚手架动态命令执行代码编写")]),s._v(" "),t("li",[s._v("进阶：尝试分析Node多进程execSync/execFileSync/spawnSync源码")])]),s._v(" "),t("h2",{attrs:{id:"_02-imooc-cli脚手架命令注册"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_02-imooc-cli脚手架命令注册"}},[s._v("#")]),s._v(" 02-imooc-cli脚手架命令注册")]),s._v(" "),t("ul",[t("li",[s._v("脚手架初始化 + 全局参数注册")]),s._v(" "),t("li",[s._v("脚手架命令注册")])]),s._v(" "),t("h2",{attrs:{id:"_03-高性能脚手架架构设计和缓存结构设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_03-高性能脚手架架构设计和缓存结构设计"}},[s._v("#")]),s._v(" 03-高性能脚手架架构设计和缓存结构设计")]),s._v(" "),t("h3",{attrs:{id:"痛点分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#痛点分析"}},[s._v("#")]),s._v(" 痛点分析")]),s._v(" "),t("p",[s._v("当前脚手架架构如下图：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://oss-1252175178.cos.ap-shanghai.myqcloud.com/%E6%85%95%E8%AF%BE%E7%BD%91%E6%9E%B6%E6%9E%84%E5%B8%88%E8%AF%BE%E7%A8%8B/%E8%84%9A%E6%89%8B%E6%9E%B6-%E5%BD%93%E5%89%8D%E6%9E%B6%E6%9E%84%E7%97%9B%E7%82%B9%E5%88%86%E6%9E%90.jpeg",alt:""}})]),s._v(" "),t("p",[s._v("这样的架构设计已经可以满足一般脚手架需求，但是有以下两个问题：")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("cli 安装速度慢")]),s._v("：所有 package 都集成在 cli 里，因此当命令较多时，会减慢 cli 的安装速度")]),s._v(" "),t("li",[t("strong",[s._v("灵活性差")]),s._v("：init 命令只能使用 @imooc-cli-dev/init 包，对于集团公司而言，每个 bu 的 init 命令可能都各不相同，可能需要实现 init 命令动态化，如：\n"),t("ul",[t("li",[s._v("团队 A 使用 @imooc-cli-dev/init 作为初始化模块")]),s._v(" "),t("li",[s._v("团队 B 使用自己开发的 @imooc-cli-dev/my-init 作为初始化模块")]),s._v(" "),t("li",[s._v("团队 C 使用自己开发的 @imooc-cli-dev/your-init 作为初始化模块")])])])]),s._v(" "),t("p",[s._v("这时对我们的架构设计就提出挑战，要求我们能够动态加载 init 模块，这将增加架构的复杂度，但大大提升脚手架的可扩展性，将脚手架框架和业务逻辑解耦")]),s._v(" "),t("h3",{attrs:{id:"脚手架架构优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#脚手架架构优化"}},[s._v("#")]),s._v(" 脚手架架构优化")]),s._v(" "),t("p",[s._v("优化结果如下：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://oss-1252175178.cos.ap-shanghai.myqcloud.com/%E6%85%95%E8%AF%BE%E7%BD%91%E6%9E%B6%E6%9E%84%E5%B8%88%E8%AF%BE%E7%A8%8B/%E8%84%9A%E6%89%8B%E6%9E%B6-%E6%9E%B6%E6%9E%84%E4%BC%98%E5%8C%96.jpeg",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"脚手架命令动态加载功能架构设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#脚手架命令动态加载功能架构设计"}},[s._v("#")]),s._v(" 脚手架命令动态加载功能架构设计")]),s._v(" "),t("p",[s._v("架构设计图如下：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://oss-1252175178.cos.ap-shanghai.myqcloud.com/%E6%85%95%E8%AF%BE%E7%BD%91%E6%9E%B6%E6%9E%84%E5%B8%88%E8%AF%BE%E7%A8%8B/%E8%84%9A%E6%89%8B%E6%9E%B6-%E5%91%BD%E4%BB%A4%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD%E5%8A%9F%E8%83%BD%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.jpeg",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"缓存目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存目录"}},[s._v("#")]),s._v(" 缓存目录")]),s._v(" "),t("p",[s._v("缓存目录位于用户主目录下的 "),t("code",[s._v(".imooc-cli")]),s._v("，如果没有生成该目录时，我们可以手动创建，或者通过如下代码生成：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" userHome "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'user-home'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" fse "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fs-extra'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" path "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'path'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" cachePath "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("userHome"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.imooc-cli'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 生成缓存目录路径")]),s._v("\n\nfse"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdirpSync")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cachePath"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 生成缓存目录")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h2",{attrs:{id:"_04-通用npm模块类package封装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_04-通用npm模块类package封装"}},[s._v("#")]),s._v(" 04-通用npm模块类Package封装")]),s._v(" "),t("ul",[t("li",[s._v("exists")]),s._v(" "),t("li",[s._v("install")]),s._v(" "),t("li",[s._v("update")])]),s._v(" "),t("h2",{attrs:{id:"_05-预备知识-node多进程入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_05-预备知识-node多进程入门"}},[s._v("#")]),s._v(" 05-预备知识：Node多进程入门")]),s._v(" "),t("h3",{attrs:{id:"官方文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#官方文档"}},[s._v("#")]),s._v(" 官方文档")]),s._v(" "),t("p",[s._v("中文版：http://nodejs.cn/api/child_process.html")]),s._v(" "),t("h3",{attrs:{id:"什么是进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是进程"}},[s._v("#")]),s._v(" 什么是进程")]),s._v(" "),t("blockquote",[t("p",[s._v("进程（Process）是计算机中的程序关于某数据集合上的一次运行活动，是系统进行资源分配和调度的基本单位，是"),t("a",{attrs:{href:"https://baike.baidu.com/item/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F",target:"_blank",rel:"noopener noreferrer"}},[s._v("操作系统"),t("OutboundLink")],1),s._v("结构的基础。")])]),s._v(" "),t("p",[s._v("进程的概念主要有两点：")]),s._v(" "),t("ul",[t("li",[s._v("第一，进程是一个实体。每一个进程都有它自己的地址空间。")]),s._v(" "),t("li",[s._v("第二，进程是一个“执行中的程序”，存在嵌套关系。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://oss-1252175178.cos.ap-shanghai.myqcloud.com/%E6%85%95%E8%AF%BE%E7%BD%91%E6%9E%B6%E6%9E%84%E5%B8%88%E8%AF%BE%E7%A8%8B/Node%E5%A4%9A%E8%BF%9B%E7%A8%8B-%E8%BF%9B%E7%A8%8B.jpeg",alt:""}})]),s._v(" "),t("p",[s._v("我们在 child_process 中创建的进程就是 Node.js 的子进程")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://oss-1252175178.cos.ap-shanghai.myqcloud.com/%E6%85%95%E8%AF%BE%E7%BD%91%E6%9E%B6%E6%9E%84%E5%B8%88%E8%AF%BE%E7%A8%8B/Node%E5%A4%9A%E8%BF%9B%E7%A8%8B-%E5%AD%90%E8%BF%9B%E7%A8%8B.jpeg",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"child-process-用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#child-process-用法"}},[s._v("#")]),s._v(" child_process 用法")]),s._v(" "),t("p",[s._v("Node.js基于事件驱动来处理并发，它本身是以单线程模式运行的。Node.js通过"),t("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//iojs.org/api/child_process.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("child_process"),t("OutboundLink")],1),s._v("开启子进程执行指定程序。主要包括4个异步进程函数(spawn,exec,execFile,fork)和3个同步进程函数(spawnSync,execFileSync,execSync)。一般我们比较常用的是spawn和exec这两个方法。")]),s._v(" "),t("p",[t("strong",[s._v("spawn只能运行指定的程序，参数需要在列表中给出，而exec可以直接运行复杂的命令。其中异步进程函数spawn是最基本的创建子进程的函数，其他三个异步函数都是对spawn不同程度的封装。")])]),s._v(" "),t("p",[s._v("spawn适合耗时任务的分布输出，exec则适合输出较少的情况，同步执行")]),s._v(" "),t("h4",{attrs:{id:"异步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#异步"}},[s._v("#")]),s._v(" 异步")]),s._v(" "),t("ul",[t("li",[s._v("exec：执行shell脚本（"),t("strong",[s._v("一次性输出")]),s._v("）")]),s._v(" "),t("li",[s._v("execFile：执行shell文件")]),s._v(" "),t("li",[s._v("fork：使用node执行命令（和 require 效果类似，不同点在于 fork 的文件中 pid 是新的 node 进程 id，和主进程 id 互相独立）")]),s._v(" "),t("li",[s._v("spawn "),t("code",[s._v("child_process.spawn(command[, args][, options])")]),s._v(" 流式处理，持续输出，适合执行"),t("strong",[s._v("耗时任务")]),s._v("，比如 "),t("code",[s._v("npm install")])])]),s._v(" "),t("h4",{attrs:{id:"同步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同步"}},[s._v("#")]),s._v(" 同步")]),s._v(" "),t("ul",[t("li",[s._v("execSync")]),s._v(" "),t("li",[s._v("execFileSync")]),s._v(" "),t("li",[s._v("spawnSync")])]),s._v(" "),t("p",[s._v("代码演示")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" cp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'child_process'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" path "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'path'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\ncp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("exec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ls -al'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" stderr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stderr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\ncp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("execFile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__dirname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test.shell'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-al'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-bl'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" stderr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stdout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("stderr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" child "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" cp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("spawn")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__dirname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test.shell'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\ncp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("fork")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__dirname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'child.js'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br")])]),t("h2",{attrs:{id:"_06-基于node多进程构建高性能脚手架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_06-基于node多进程构建高性能脚手架"}},[s._v("#")]),s._v(" 06-基于Node多进程构建高性能脚手架")]),s._v(" "),t("h2",{attrs:{id:"_07-node进阶-child-process源码分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_07-node进阶-child-process源码分析"}},[s._v("#")]),s._v(" 07-Node进阶：child_process源码分析")]),s._v(" "),t("h3",{attrs:{id:"疑问和收获"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#疑问和收获"}},[s._v("#")]),s._v(" 疑问和收获")]),s._v(" "),t("ul",[t("li",[s._v("exec 和 execFile 到底有什么区别？")]),s._v(" "),t("li",[s._v("为什么 exec/execFile/fork 都是通过 spawn 实现的，spawn 的作用到底是什么？")]),s._v(" "),t("li",[s._v("为什么 spawn 调用后没有回调，而 exec 和 execFile 能够回调？")]),s._v(" "),t("li",[s._v("为什么 spawn 调用后需要手动调用 child.stdout.on(‘data’, callback)，这里的 child.stdout / child.stderr 到底是什么？")]),s._v(" "),t("li",[s._v("为什么有 data/error/exit/close 这么多种回调，它们的执行顺序到底是怎样的？")])]),s._v(" "),t("h3",{attrs:{id:"node-多进程源码总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-多进程源码总结"}},[s._v("#")]),s._v(" Node 多进程源码总结")]),s._v(" "),t("ul",[t("li",[s._v("exec/execFile/spawn/fork的区别\n"),t("ul",[t("li",[s._v("exec：原理是调用 /bin/sh -c 执行我们传入的 shell 脚本，底层调用了 execFile")]),s._v(" "),t("li",[s._v("execFile：原理是直接执行我们传入的 file 和 args，底层调用 spawn 创建和执行子进程，并建立了回调，一次性将所有的 stdout 和 stderr 结果返回")]),s._v(" "),t("li",[s._v("spawn：原理是调用了 internal/child_process，实例化了 ChildProcess 子进程对象，再调用 child.spawn 创建子进程并执行命令，底层是调用了 child._handle.spawn 执行 process_wrap 中的 spawn 方法，执行过程是异步的，执行完毕后通过 PIPE 进行单向数据通信，通信结束后会子进程发起 onexit 回调，同时 Socket 会执行 close 回调")]),s._v(" "),t("li",[s._v("fork：原理是通过 spawn 创建子进程和执行命令，采用 node 执行命令，通过 setupchannel 创建 IPC 用于子进程和父进程之间的双向通信")])])]),s._v(" "),t("li",[s._v("data/error/exit/close回调的区别\n"),t("ul",[t("li",[s._v("data：主进程读取数据过程中通过 onStreamRead 发起的回调")]),s._v(" "),t("li",[s._v("error：命令执行失败后发起的回调")]),s._v(" "),t("li",[s._v("exit：子进程关闭完成后发起的回调")]),s._v(" "),t("li",[s._v("close：子进程所有 Socket 通信端口全部关闭后发起的回调")]),s._v(" "),t("li",[s._v("stdout close/stderr close：特定的 PIPE 读取完成后调用 onReadableStreamEnd 关闭 Socket 时发起的回调")])])])]),s._v(" "),t("h3",{attrs:{id:"exec-源码深入分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exec-源码深入分析"}},[s._v("#")]),s._v(" exec 源码深入分析")]),s._v(" "),t("ul",[t("li",[s._v("child_process\n"),t("ul",[t("li",[s._v("exec")]),s._v(" "),t("li",[s._v("execFile")]),s._v(" "),t("li",[s._v("spawn")])])]),s._v(" "),t("li",[s._v("internal/child_process\n"),t("ul",[t("li",[s._v("ChildProcess")]),s._v(" "),t("li",[s._v("spawn")])])])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://oss-1252175178.cos.ap-shanghai.myqcloud.com/%E6%85%95%E8%AF%BE%E7%BD%91%E6%9E%B6%E6%9E%84%E5%B8%88%E8%AF%BE%E7%A8%8B/Node%E5%A4%9A%E8%BF%9B%E7%A8%8B-child_process%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.jpeg",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"node-多进程回调流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-多进程回调流程"}},[s._v("#")]),s._v(" Node 多进程回调流程")]),s._v(" "),t("ul",[t("li",[s._v("spawn")]),s._v(" "),t("li",[s._v("Pipe")]),s._v(" "),t("li",[s._v("onexit")]),s._v(" "),t("li",[s._v("kill")]),s._v(" "),t("li",[s._v("Socket")]),s._v(" "),t("li",[s._v("close")]),s._v(" "),t("li",[s._v("exit")])]),s._v(" "),t("p",[t("img",{attrs:{src:"https://oss-1252175178.cos.ap-shanghai.myqcloud.com/%E6%85%95%E8%AF%BE%E7%BD%91%E6%9E%B6%E6%9E%84%E5%B8%88%E8%AF%BE%E7%A8%8B/Node%E5%A4%9A%E8%BF%9B%E7%A8%8B-%E5%9B%9E%E8%B0%83%E6%B5%81%E7%A8%8B.jpeg",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"node-多进程执行阶段总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#node-多进程执行阶段总结"}},[s._v("#")]),s._v(" Node 多进程执行阶段总结")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://oss-1252175178.cos.ap-shanghai.myqcloud.com/%E6%85%95%E8%AF%BE%E7%BD%91%E6%9E%B6%E6%9E%84%E5%B8%88%E8%AF%BE%E7%A8%8B/Node%E5%A4%9A%E8%BF%9B%E7%A8%8B-%E6%89%A7%E8%A1%8C%E9%98%B6%E6%AE%B5%E6%80%BB%E7%BB%93.jpeg",alt:""}})]),s._v(" "),t("h3",{attrs:{id:"fork-执行流程分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fork-执行流程分析"}},[s._v("#")]),s._v(" Fork 执行流程分析")]),s._v(" "),t("p",[s._v("核心区别是创建 IPC Channel 取代 [stdin, stdout, stderr]")]),s._v(" "),t("h3",{attrs:{id:"同步方法源码分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同步方法源码分析"}},[s._v("#")]),s._v(" 同步方法源码分析")]),s._v(" "),t("p",[s._v("核心是调用 Process.spawnSync")]),s._v(" "),t("h3",{attrs:{id:"知识储备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#知识储备"}},[s._v("#")]),s._v(" 知识储备")]),s._v(" "),t("h4",{attrs:{id:"shell的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell的使用"}},[s._v("#")]),s._v(" shell的使用")]),s._v(" "),t("p",[s._v("方法一：直接执行shell文件")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("/bin/sh test.shell\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("方法二：直接执行shell语句")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("/bin/sh "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-c")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ls -al|grep node_modules"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);